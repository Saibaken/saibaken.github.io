{"version":3,"file":"static/js/408.59cae551.chunk.js","mappings":"0MA2GA,ICzGA,EDCA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,UACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,UAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAApE,eAAOK,EAAP,KAAcC,EAAd,KAMMC,EAAW,SAACC,GAChBF,GAAS,SAACG,GACR,IAAMC,GAAQ,OAAOD,GAErB,OADAC,EAASF,EAAEG,OAAOC,IAAMT,EACjBO,CACR,IARDN,EAAqB,WAAXD,EAAiB,SAAM,UAUjCK,EAAEG,OAAOE,UAAW,CACrB,EA0DD,OAxDAC,EAAAA,EAAAA,YAAU,WAER,IADA,IAAIC,GAAW,EACNC,EAAI,EAAGA,EAAI,EAAGA,IAGnBX,EAAU,EAAJW,KAAWX,EAAU,EAAJW,EAAQ,IAC/BX,EAAU,EAAJW,EAAQ,KAAOX,EAAU,EAAJW,EAAQ,IAClB,KAAjBX,EAAU,EAAJW,KAENd,EAAUG,EAAU,EAAJW,IAChBD,GAAW,GAIXV,EAAMW,KAAOX,EAAMW,EAAI,IACvBX,EAAMW,EAAI,KAAOX,EAAMW,EAAI,IACd,KAAbX,EAAMW,KAENd,EAAUG,EAAMW,IAChBD,GAAW,IAKZV,EAAM,KAAOA,EAAM,IAAMA,EAAM,KAAOA,EAAM,IAAmB,KAAbA,EAAM,IACxDA,EAAM,KAAOA,EAAM,IAAMA,EAAM,KAAOA,EAAM,IAAmB,KAAbA,EAAM,MAEzDH,EAAUG,EAAM,IAChBU,GAAW,GAERV,EAAMY,SAAS,KAAQF,GAC1Bb,EAAU,OAEb,GAAE,CAACG,KAEJS,EAAAA,EAAAA,YAAU,WACO,OAAXb,IACW,SAAXA,EACFiB,MAAM,SAENpB,EAASqB,QAAQC,WAAWC,SAAQ,SAACC,GACnCA,EAAKC,WAAWV,UAAW,CAC5B,IACDK,MAAMjB,EAAS,UAElB,GAAE,CAACA,KAYF,gBAAKuB,UAAU,wBAAf,UACE,iBAAKA,UAAU,8BAAf,WACE,eAAIA,UAAU,WAAd,0BACA,iBAAKA,UAAU,OAAf,6BAAuCrB,MACvC,gBAAKqB,UAAU,QAAQC,IAAK3B,EAA5B,SACGO,EAAMqB,KAAI,SAACJ,EAAMK,GAAP,OACT,kBAAkBH,UAAU,YAA5B,WACE,mBACEA,UAAU,YAEVZ,GAAIe,EACJC,QAAS,SAACpB,GAAD,OAAOD,EAASC,EAAhB,EAJX,SAMGc,GAJIK,GAMNA,EAAQ,IAAM,GAAI,mBAAY,0BATtBA,EADF,OAcb,mBAAQH,UAAU,eAAeI,QA7BzB,WACZtB,EAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC1CR,EAASqB,QAAQC,WAAWC,SAAQ,SAACC,GACnCA,EAAKC,WAAWV,UAAW,CAC5B,IACDX,EAAU,MACVE,EAAU,SACX,EAsBK,uBAMP,C,iFErGc,SAASyB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,EAClD,CDES,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["apps/tictactoe/App.js","apps/tictactoe/index.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import \"./index.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const fieldRef = useRef();\r\n  const [winner, setWinner] = useState(null);\r\n  const [player, setPlayer] = useState(\"❌\");\r\n  const [field, setField] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n\r\n  const switchPlayer = () => {\r\n    setPlayer(player === \"❌\" ? \"⭕\" : \"❌\");\r\n  };\r\n\r\n  const makeTurn = (e) => {\r\n    setField((prev) => {\r\n      const newField = [...prev];\r\n      newField[e.target.id] = player;\r\n      return newField;\r\n    });\r\n    switchPlayer();\r\n    e.target.disabled = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isWinner = false;\r\n    for (let i = 0; i < 3; i++) {\r\n      // Horizontal check   012, 345, 678\r\n      if (\r\n        field[i * 3] === field[i * 3 + 1] &&\r\n        field[i * 3 + 1] === field[i * 3 + 2] &&\r\n        field[i * 3] !== \"\"\r\n      ) {\r\n        setWinner(field[i * 3]);\r\n        isWinner = true;\r\n      }\r\n      // Vertical check     036, 147, 258\r\n      if (\r\n        field[i] === field[i + 3] &&\r\n        field[i + 3] === field[i + 6] &&\r\n        field[i] !== \"\"\r\n      ) {\r\n        setWinner(field[i]);\r\n        isWinner = true;\r\n      }\r\n    }\r\n    // Diagonal check       048, 246\r\n    if (\r\n      (field[0] === field[4] && field[4] === field[8] && field[0] !== \"\") ||\r\n      (field[2] === field[4] && field[4] === field[6] && field[2] !== \"\")\r\n    ) {\r\n      setWinner(field[4]);\r\n      isWinner = true;\r\n    }\r\n    if (!field.includes(\"\") && !isWinner) {\r\n      setWinner(\"Draw\");\r\n    }\r\n  }, [field]);\r\n\r\n  useEffect(() => {\r\n    if (winner === null) return;\r\n    if (winner === \"Draw\") {\r\n      alert(\"Draw\");\r\n    } else {\r\n      fieldRef.current.childNodes.forEach((item) => {\r\n        item.firstChild.disabled = true;\r\n      });\r\n      alert(winner + \" won!\");\r\n    }\r\n  }, [winner]);\r\n\r\n  const reset = () => {\r\n    setField([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n    fieldRef.current.childNodes.forEach((item) => {\r\n      item.firstChild.disabled = false;\r\n    });\r\n    setWinner(null);\r\n    setPlayer(\"❌\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tic-tac-toe-container\">\r\n      <div className=\"tic-tac-toe-inner-container\">\r\n        <h1 className=\"headline\">Tic Tac Toe</h1>\r\n        <div className=\"turn\">Current player: {player}</div>\r\n        <div className=\"field\" ref={fieldRef}>\r\n          {field.map((item, index) => (\r\n            <span key={index} className=\"tile-span\">\r\n              <button\r\n                className=\"game-tile\"\r\n                key={index}\r\n                id={index}\r\n                onClick={(e) => makeTurn(e)}\r\n              >\r\n                {item}\r\n              </button>\r\n              {index % 3 === 2 ? <br></br> : <></>}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <button className=\"reset-button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["fieldRef","useRef","useState","winner","setWinner","player","setPlayer","field","setField","makeTurn","e","prev","newField","target","id","disabled","useEffect","isWinner","i","includes","alert","current","childNodes","forEach","item","firstChild","className","ref","map","index","onClick","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}